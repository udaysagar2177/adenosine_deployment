# This is the setup for SMACROBS website
__maestro:
  schema: 2

{%- set name = 'smacrobs' %}
name: {{ name }}

{%- with %}
{%- set env_variables = {
        'environment': 'production',
        'DATABASE_NAME': 'adenosine',
        'DATABASE_HOSTNAME': 'smacrobs_mongo',
        'DATABASE_PORT': '27017'
        } %}


ships:
  smacrobs_ec2:
    ip: 52.4.187.214
    docker_port: 4243
    timeout: 10
    #ssh_tunnel:
    #  user: ubuntu
    #  key: {{ env.HOME }}/.ssh/id_rsa

{%- set ship = 'smacrobs_ec2' %}

audit:
  - type: log
    file: /tmp/maestro.auditlog

services:
  smacrobs_mongo:
    image: docker.io/udaysagar/smacrobs_mongo:latest
    env:
      {%- for var_name, var_value in env_variables.iteritems() %}
      {{ var_name }}: {{ var_value }}
      {%- endfor %}
      RECOMMENDATIONS_DATA_GIST_URL: {{ env.RECOMMENDATIONS_DATA_GIST_URL }}
    volumes:
      /maestro/mongo_data/data: /data/db
      /maestro/mongo_data/configdb: /data/configdb
    instances:
      smacrobs_mongo_1:
        ship: {{ ship }}
        ports: {smacrobs_mongo_port: "27017:27017"}
        lifecycle:
          running: [{type: tcp, port: smacrobs_mongo_port, max_wait: 10}]
  smacrobs_website:
    image: docker.io/udaysagar/smacrobs_website:latest
    requires: [ smacrobs_mongo ]
    env:
      {%- for var_name, var_value in env_variables.iteritems() %}
      {{ var_name }}: {{ var_value }}
      {%- endfor %}
    volumes:
      /maestro/website_maven: /root/.m2
    instances:
      smacrobs_web_1:
        ship: {{ ship }}
        ports: {smacrobs_website_port: "80:80"}
        links:
          smacrobs_mongo_1: smacrobs_mongo
        lifecycle:
          running: [{type: tcp, port: smacrobs_website_port, max_wait: 100}]
  tisensor_rest:
    image: docker.io/udaysagar/smacrobs_tisensor_rest:latest
    requires: [ smacrobs_mongo ]
    env:
      {%- for var_name, var_value in env_variables.iteritems() %}
      {{ var_name }}: {{ var_value }}
      {%- endfor %}
    volumes:
      /maestro/rest_api_maven: /root/.m2
    instances:
      tisensor_rest_1:
        ship: {{ ship }}
        ports: {tisensor_rest_port: "8081:8081"}
        links:
          smacrobs_mongo_1: smacrobs_mongo
        lifecycle:
          running: [{type: tcp, port: tisensor_rest_port, max_wait: 100}]
{%- endwith %}