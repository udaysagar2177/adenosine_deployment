# This is the setup for SMACROBS website
__maestro:
  schema: 2

{%- set name = 'smacrobs' %}
name: {{ name }}

{%- with %}
{%- set env_variables = {
        'environment': 'production',
        'DATABASE_NAME': 'adenosine',
        'DATABASE_HOSTNAME': '52.8.242.203',
        'DATABASE_PORT': '27017',
        'RECOMMENDATIONS_DATA_GIST_URL': ''
        } %}

ships:
  smacrobs1:
    ip: 52.8.79.29
    docker_port: 4243
    timeout: 10
    ssh_tunnel:
      user: ubuntu
      key: {{ env.HOME }}/.ssh/id_rsa
  smacrobs2:
    ip: 52.9.201.169
    docker_port: 4243
    timeout: 10
    ssh_tunnel:
      user: ubuntu
      key: {{ env.HOME }}/.ssh/id_rsa
  smacrobs3:
    ip: 52.8.242.203
    docker_port: 4243
    timeout: 10
    ssh_tunnel:
      user: ubuntu
      key: {{ env.HOME }}/.ssh/id_rsa

{%- set smacrobs_website_servers = {
      'smacrobs1': 'smacrobs_website_1',
      'smacrobs2': 'smacrobs_website_2',
      'smacrobs3': 'smacrobs_website_3',
    } %}

{%- set smacrobs_tisensor_rest_servers = {
      'smacrobs1': 'smacrobs_tisensor_rest_1',
      'smacrobs2': 'smacrobs_tisensor_rest_2',
      'smacrobs3': 'smacrobs_tisensor_rest_3'
    } %}

{%- set smacrobs_mongo_servers = {
      'smacrobs3': 'smacrobs_mongo_1'
    } %}

{%- set ship = 'smacrobs_ec2' %}

audit:
  - type: log
    file: /tmp/maestro.auditlog

services:
  smacrobs_mongo:
    image: docker.io/udaysagar/smacrobs_mongo:latest
    env:
      {%- for var_name, var_value in env_variables.iteritems() %}
      {{ var_name }}: {{ var_value }}
      {%- endfor %}
    volumes:
      /maestro/mongo_data/data: /data/db
      /maestro/mongo_data/configdb: /data/configdb
    instances:
      {%- for ship, instance in smacrobs_mongo_servers.iteritems() %}
      {{ instance }}:
        ship: {{ ship }}
        ports: {smacrobs_mongo_port: "27017:27017"}
        lifecycle:
          running: [{type: tcp, port: smacrobs_mongo_port, max_wait: 10}]
      {%- endfor %}
  smacrobs_website:
    image: docker.io/udaysagar/smacrobs_website:latest
    requires: [ smacrobs_mongo ]
    env:
      {%- for var_name, var_value in env_variables.iteritems() %}
      {{ var_name }}: {{ var_value }}
      {%- endfor %}
    volumes:
      /maestro/website_maven: /root/.m2
    instances:
      {%- for ship, instance in smacrobs_website_servers.iteritems() %}
      {{ instance }}:
        ship: {{ ship }}
        ports: {smacrobs_website_port: "80:80"}
        lifecycle:
          running: [{type: tcp, port: smacrobs_website_port, max_wait: 100}]
      {%- endfor %}
  tisensor_rest:
    image: docker.io/udaysagar/smacrobs_tisensor_rest:latest
    requires: [ smacrobs_mongo ]
    env:
      {%- for var_name, var_value in env_variables.iteritems() %}
      {{ var_name }}: {{ var_value }}
      {%- endfor %}
    volumes:
      /maestro/rest_api_maven: /root/.m2
    instances:
      {%- for ship, instance in smacrobs_tisensor_rest_servers.iteritems() %}
      {{ instance }}:
        ship: {{ ship }}
        ports: {tisensor_rest_port: "8081:8081"}
        lifecycle:
          running: [{type: tcp, port: tisensor_rest_port, max_wait: 100}]
      {%- endfor %}
{%- endwith %}
